# ==============================================================================
# ESPHome Configuration for Rain Sensor module YL-83
# Author: Baptiste F
# Date: 2025-08-03
# Version: 1.0
# Description: Default configuration for Module YL-83 Rain sensor
#       This example demonstrates the use of an ESP8266 development board.
# ==============================================================================

substitutions:
  name: module-yl-83                          # Technical name of the device
  friendly_name: Rain sensor module YL-83     # Friendly name displayed in the user interface

esphome:
  name: ${name}                         # Use the substitution for the technical name
  friendly_name: ${friendly_name}       # Use the substitution for the friendly name
  # Basic ESPHome configuration with a unique device name.
  # The name is used to identify the device in Home Assistant.

# Specify the board model (e.g., D1 Mini). Update this line to match the type of board you are using.
esp8266:
  board: d1_mini

# Enable logging for debugging and data inspection
logger:
  level: DEBUG                          # Logging level set to DEBUG for detailed information

# Enable Home Assistant integration via the API
api:
  encryption:
    key: "your-encryption-key"          # Add an encryption key to secure communication with Home Assistant

# Enable over-the-air (OTA) updates to flash firmware without a physical connection
ota:
  - platform: esphome
    password: "8acf384c6416c01f6bc9b936bb068b70"
    
# Wi-Fi configuration
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  # Store sensitive information (e.g., WiFi SSID and password) in `secrets.yaml`.

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Module-YL-83 Fallback Hotspot"
    password: "fallbackpassword"        # Fallback access point password

web_server:
  port: 80  # par défaut

captive_portal:

# YL-83 sensor configuration
sensor:
  - platform: wifi_signal
    name: "Signal WiFi ESP"  # Reports WiFi signal strength
  - platform: adc
    pin: A0
    id: pluie_analog
    name: "Rain or Snow Measurement (A0)"
    update_interval: 2s
    filters:
      - lambda: |-
          // Invert the reading (1.0 - x) then convert to percentage (0–100%)
          return (1.0 - x) * 100.0;
    unit_of_measurement: "%"
    accuracy_decimals: 0

# Configuration for the onboard LED
output:
  - platform: gpio
    pin: 
      number: GPIO2                    # GPIO2 is connected to the onboard LED
      inverted: true                   # Inverted because the LED is active-low
    id: onboard_led

binary_sensor:
  - platform: template
    name: "Rain or Snow (Analog)"
    id: pluie_bin
    device_class: moisture
    lambda: |-
      if (id(pluie_analog).state > 30.0) {
        return true;   // Rain detected
      } else {
        return false;  // No rain
      }
    on_state:
      then:
        - lambda: |-
            if (id(pluie_bin).state) {
              id(onboard_led).turn_on();   // Turn on LED when raining
            } else {
              id(onboard_led).turn_off();  // Turn off LED when dry
            }

  - platform: gpio
    name: "Rain or Snow (D0)"
    device_class: moisture
    pin:
      number: GPIO15                 # Connect digital D0 pin of YL-83 to GPIO15
      mode: INPUT_PULLUP
      inverted: true                 # Inverted because 0V = rain, 3.3V = dry
    id: pluie_digital
